{"version":3,"sources":["components/common/FormsControls/FormsControls.module.scss","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Login/LoginForm.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"names":["module","exports","Textarea","input","meta","props","showError","touched","error","className","styles","formControl","Input","required","value","maxLenghtCreator","maxLenght","length","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","name","placeholder","validate","type","formSummaryError","Login","isAuth","to","formData","login","email","password","rememberMe","LoginContainer","connect","state","auth","dispatch"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,+LCE9GC,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,iBAC3CC,EAAYF,EAAKG,SAAWH,EAAKI,MACvC,OACI,sBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAYI,IAAOF,MAAQ,IAAvE,UACI,8BACI,oDAAcL,GAAWE,MAE7B,8BACKC,GAAa,+BAAOF,EAAKI,cAM7BI,EAAQ,SAAC,GAA6B,IAA5BT,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,iBACxCC,EAAYF,EAAKG,SAAWH,EAAKI,MACvC,OACI,sBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAYI,IAAOF,MAAQ,IAAvE,UACI,8BACI,iDAAWL,GAAWE,MAE1B,8BACKC,GAAa,+BAAOF,EAAKI,e,iCCzB1C,oEAAO,IAIMK,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,yGCuB5BE,EAJQC,YAAU,CAC7BC,KAAM,SADaD,EAxBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcb,EAAW,EAAXA,MAC9B,OACI,uBAAMc,SAAUD,EAAhB,UACI,8BACI,cAACE,EAAA,EAAD,CAAOC,UAAWZ,IAAOa,KAAM,QAASC,YAAa,QAASC,SAAU,CAACd,SAE7E,8BACI,cAACU,EAAA,EAAD,CAAOC,UAAWZ,IAAOa,KAAM,WAAYG,KAAM,WAAYF,YAAa,WAAYC,SAAU,CAACd,SAErG,gCACI,cAACU,EAAA,EAAD,CAAOC,UAAWZ,IAAOa,KAAM,aAAcG,KAAM,aADvD,iBAGCpB,GACG,qBAAKC,UAAWC,IAAOmB,iBAAvB,SACKrB,IAGT,8BACI,mD,OCDDsB,EAnBD,SAACzB,GAKX,OAAIA,EAAM0B,OAEF,cAAC,IAAD,CAAUC,GAAI,cAKlB,gCACI,uCACA,cAAC,EAAD,CAAgBV,SAbP,SAACW,GACd5B,EAAM6B,MAAMD,EAASE,MAAOF,EAASG,SAAUH,EAASI,mB,gBCc1DC,EAAiBC,aAdD,SAACC,GACrB,MAAO,CACLT,OAAQS,EAAMC,KAAKV,WAIE,SAACW,GACxB,MAAO,CACLR,MAAO,SAACC,EAAOC,EAAUC,GACvBK,EAASR,YAAMC,EAAOC,EAAUC,QAKfE,CAA6CT,GAErDQ","file":"static/js/6.6d78019a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oc0t\",\"error\":\"FormsControls_error__3zufy\",\"formSummaryError\":\"FormsControls_formSummaryError__CiuWy\"};","import React from 'react';\r\nimport styles from './FormsControls.module.scss';\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const showError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (showError ? styles.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            <div>\r\n                {showError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const showError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (showError ? styles.error : '')}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            <div>\r\n                {showError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const composeValidators = (...validators) => (value) => {\r\n  return validators.reduce((error, validator) => error || validator(value), undefined);\r\n}\r\n\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLenghtCreator = (maxLenght) => (value) => {\r\n    if (value && value.length > maxLenght) return `Max length is ${maxLenght} symbols`;\r\n}","import { reduxForm, Field } from \"redux-form\";\r\nimport { Input } from \"../common/FormsControls/FormsControls\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport styles from '../common/FormsControls/FormsControls.module.scss';\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field component={Input} name={'email'} placeholder={'Email'} validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={'password'} type={'password'} placeholder={'Password'} validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={'rememberMe'} type={'checkbox'} />Remember me\r\n            </div>\r\n            {error &&\r\n                <div className={styles.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nexport default LoginReduxForm;","import LoginReduxForm from \"./LoginForm\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return (\r\n            <Redirect to={'/profile/'} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","\r\nimport Login from './Login.jsx';\r\nimport {login} from '../../redux/auth-reducer.js';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (email, password, rememberMe) => {\r\n      dispatch(login(email, password, rememberMe));\r\n    }\r\n  }\r\n}\r\n\r\nconst LoginContainer = connect(mapStateToProps, mapDispatchToProps)(Login);\r\n\r\nexport default LoginContainer;\r\n"],"sourceRoot":""}