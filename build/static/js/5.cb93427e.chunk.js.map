{"version":3,"sources":["components/common/FormsControls/FormsControls.module.scss","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/NewMessage/NewMessageForm.jsx","components/Dialogs/NewMessage/NewMessage.jsx","components/Dialogs/NewMessage/NewMessageContainer.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Textarea","input","meta","props","showError","touched","error","className","styles","formControl","Input","required","value","maxLenghtCreator","maxLenght","length","DialogsItem","path","id","to","name","Message","message","maxLenght100","NewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","NewMessage","formData","addMessage","newMessage","NewMessageContainer","connect","state","newMessageText","dialogsPage","dispatch","addMessageActionCreator","Dialogs","dialogsElements","dialogs","map","el","messagesElements","messages","mapStateToPropsForRedirect","isAuth","auth","compose","Component","RedirectComponent","this","React"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,+LCE9GC,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,iBAC3CC,EAAYF,EAAKG,SAAWH,EAAKI,MACvC,OACI,sBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAYI,IAAOF,MAAQ,IAAvE,UACI,8BACI,oDAAcL,GAAWE,MAE7B,8BACKC,GAAa,+BAAOF,EAAKI,cAM7BI,EAAQ,SAAC,GAA6B,IAA5BT,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,iBACxCC,EAAYF,EAAKG,SAAWH,EAAKI,MACvC,OACI,sBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAYI,IAAOF,MAAQ,IAAvE,UACI,8BACI,iDAAWL,GAAWE,MAE1B,8BACKC,GAAa,+BAAOF,EAAKI,e,iCCzB1C,oEAAO,IAIMK,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,2DCD5BE,EAPK,SAACb,GACnB,IAAIc,EAAO,YAAYd,EAAMe,GAAG,IAChC,OACE,cAAC,IAAD,CAASX,UAAU,SAASY,GAAIF,EAAhC,SAAuCd,EAAMiB,QCClCC,EANC,SAAClB,GACf,OACE,qBAAKI,UAAU,mBAAf,SAAmCJ,EAAMmB,W,oDCEvCC,EAAeV,YAAiB,KAoBvBW,EAJaC,YAAU,CAClCC,KAAM,qBADkBD,EAdL,SAACtB,GACpB,OACI,uBAAMwB,SAAUxB,EAAMyB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAW9B,IAAUoB,KAAM,aAAcW,YAAa,qBAAsBC,SAAU,CAACrB,IAAUY,OAG5G,8BACI,wBAAQhB,UAAU,uBAAlB,4ECED0B,EAZI,SAAC9B,GAKlB,OACE,qBAAKI,UAAU,cAAf,SACE,cAAC,EAAD,CAAqBoB,SANH,SAACO,GACrB/B,EAAMgC,WAAWD,EAASE,kB,gBCefC,EAFaC,aAdN,SAACC,GACrB,MAAO,CACLC,eAAgBD,EAAME,YAAYD,mBAIb,SAACE,GACxB,MAAO,CACLP,WAAY,SAACC,GACXM,EAASC,YAAwBP,QAKXE,CAA6CL,GCE1DW,EAjBC,SAACzC,GACf,IAAI0C,EAAkB1C,EAAM2C,QAAQC,KAAI,SAACC,GAAD,OAAQ,cAAC,EAAD,CAAwB9B,GAAI8B,EAAG9B,GAAIE,KAAM4B,EAAG5B,MAA3B4B,EAAG9B,OAChE+B,EAAmB9C,EAAM+C,SAASH,KAAI,SAACC,GAAD,OAAQ,cAAC,EAAD,CAAqB1B,QAAS0B,EAAG1B,SAAnB0B,EAAG9B,OAEnE,OACE,sBAAKX,UAAU,UAAf,UACE,qBAAKA,UAAU,iBAAf,SACGsC,IAEH,sBAAKtC,UAAU,oBAAf,UACG0C,EACD,cAAC,EAAD,W,8CCXJE,EAA6B,SAACZ,GAAD,MAAY,CACzCa,OAAQb,EAAMc,KAAKD,S,QCQRE,sBACbhB,aARoB,SAACC,GACrB,MAAO,CACLO,QAASP,EAAME,YAAYK,QAC3BI,SAAUX,EAAME,YAAYS,cDDA,SAACK,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAIC,KAAKtD,MAAMiD,OACR,cAACG,EAAD,eAAeE,KAAKtD,QADG,cAAC,IAAD,CAAUgB,GAAG,gBAHR,GACXuC,IAAMH,WAStC,OAFiCjB,YAAQa,EAARb,CAAoCkB,KCH1DF,CAGbV","file":"static/js/5.cb93427e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oc0t\",\"error\":\"FormsControls_error__3zufy\",\"formSummaryError\":\"FormsControls_formSummaryError__CiuWy\"};","import React from 'react';\r\nimport styles from './FormsControls.module.scss';\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const showError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (showError ? styles.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            <div>\r\n                {showError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const showError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (showError ? styles.error : '')}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            <div>\r\n                {showError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const composeValidators = (...validators) => (value) => {\r\n  return validators.reduce((error, validator) => error || validator(value), undefined);\r\n}\r\n\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLenghtCreator = (maxLenght) => (value) => {\r\n    if (value && value.length > maxLenght) return `Max length is ${maxLenght} symbols`;\r\n}","import {NavLink} from 'react-router-dom';\r\n\r\nconst DialogsItem = (props) => {\r\n  let path = '/dialogs/'+props.id+'/';\r\n  return (\r\n    <NavLink className=\"dialog\" to={path}>{props.name}</NavLink>\r\n  );\r\n}\r\n\r\nexport default DialogsItem;\r\n","const Message = (props) => {\r\n  return (\r\n    <div className=\"dialogs__message\">{props.message}</div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import { reduxForm, Field } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { required, maxLenghtCreator } from \"../../../utils/validators/validators\";\r\n\r\nconst maxLenght100 = maxLenghtCreator(100);\r\n\r\nconst NewMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newMessage'} placeholder={'Enter your message'} validate={[required, maxLenght100]} />\r\n            </div>\r\n\r\n            <div>\r\n                <button className=\"btn new-message__btn\">Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewMessageReduxForm = reduxForm({\r\n    form: 'dialogsNewMessage'\r\n})(NewMessageForm);\r\n\r\nexport default NewMessageReduxForm;","\r\nimport React from 'react';\r\nimport NewMessageReduxForm from './NewMessageForm';\r\n\r\nconst NewMessage = (props) => {\r\n  const addNewMessage = (formData) => {\r\n    props.addMessage(formData.newMessage);\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-message\">\r\n      <NewMessageReduxForm onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewMessage;\r\n","\r\nimport NewMessage from './NewMessage.jsx';\r\nimport {addMessageActionCreator} from '../../../redux/dialogs-reducer.js';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    newMessageText: state.dialogsPage.newMessageText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessage) => {\r\n      dispatch(addMessageActionCreator(newMessage));\r\n    }\r\n  }\r\n}\r\n\r\nconst NewMessageContainer = connect(mapStateToProps, mapDispatchToProps)(NewMessage);\r\n\r\nexport default NewMessageContainer;\r\n","import DialogItem from './DialogsItem/DialogsItem.jsx';\r\nimport Message from './Message/Message.jsx';\r\nimport NewMessageContainer from './NewMessage/NewMessageContainer.jsx';\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.dialogs.map((el) => <DialogItem key={el.id} id={el.id} name={el.name} />);\r\n  let messagesElements = props.messages.map((el) => <Message key={el.id} message={el.message} />);\r\n\r\n  return (\r\n    <div className=\"dialogs\">\r\n      <div className=\"dialogs__items\">\r\n        {dialogsElements}\r\n      </div>\r\n      <div className=\"dialogs__messages\">\r\n        {messagesElements}\r\n        <NewMessageContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"/login/\" />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}","\r\nimport Dialogs from './Dialogs.jsx';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect.jsx';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}